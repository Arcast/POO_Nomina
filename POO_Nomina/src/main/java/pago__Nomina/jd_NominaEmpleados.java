/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package pago__Nomina;

import Control_CuentasEmpresa.Cuentas;
import Control_CuentasEmpresa.CuentasDAO;
import Control_CuentasEmpresa.MovimientosCuentas;
import Control_CuentasEmpresa.MovimientosCuentasDAO;
import Control_Empleados.*;
import Control_Usuario.Usuario;
import Control_Usuario.UsuariosDAO;
import java.awt.Color;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import pago__Nomina.jd_Nomina;

/**
 *
 * @author ernes
 */
public class jd_NominaEmpleados extends javax.swing.JDialog {
    private int FilaSeleccionada;
    private DefaultTableModel modelo;    
    String IdEmpleado, NombreEmpleado, ApellidoEmpleado, PuestoEmpleado, Salario_Fijo;
    double SalarioNeto = 0.0;
    /**
     * Creates new form jd_AgregarEmpleado
     */
    public jd_NominaEmpleados(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        modelo =(DefaultTableModel) tblNomina.getModel();
        SalarioNeto = 0.0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtPuesto = new javax.swing.JTextField();
        btnCancelarE = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtCuenta = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNomina = new javax.swing.JTable();
        txtFechaIngreso = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnCalcular = new javax.swing.JButton();
        btnTransaccion1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        txtBanco = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtSalario = new javax.swing.JTextField();
        btnLimpiarE = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Id del Empleado:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Nombre:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Apellido:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Cargo:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Salario Fijo:");

        txtID.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        txtNombre.setEditable(false);
        txtNombre.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        txtApellido.setEditable(false);
        txtApellido.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N

        txtPuesto.setEditable(false);
        txtPuesto.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        txtPuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPuestoActionPerformed(evt);
            }
        });

        btnCancelarE.setBackground(new java.awt.Color(255, 204, 204));
        btnCancelarE.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCancelarE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cancelar.png"))); // NOI18N
        btnCancelarE.setText("Cancelar");
        btnCancelarE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarEActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("Cuenta Bancaria:");

        txtCuenta.setEditable(false);
        txtCuenta.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        txtCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCuentaActionPerformed(evt);
            }
        });

        tblNomina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Salario mensual", "Inss Laboral", "Salario - INSS", "IR", "Salario a Recibir"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblNomina);

        txtFechaIngreso.setEditable(false);
        txtFechaIngreso.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        txtFechaIngreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaIngresoActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setText("Fecha Ingreso");

        btnCalcular.setBackground(new java.awt.Color(153, 204, 255));
        btnCalcular.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCalcular.setForeground(new java.awt.Color(0, 0, 0));
        btnCalcular.setIcon(new javax.swing.ImageIcon(getClass().getResource("/transferencia-bancaria.png"))); // NOI18N
        btnCalcular.setText("Calcular");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        btnTransaccion1.setBackground(new java.awt.Color(153, 204, 255));
        btnTransaccion1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnTransaccion1.setForeground(new java.awt.Color(0, 0, 0));
        btnTransaccion1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/transferir-dinero.png"))); // NOI18N
        btnTransaccion1.setText("Proceso de pago");
        btnTransaccion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransaccion1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        jLabel6.setText("Pago de Nomina       ");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        txtBanco.setEditable(false);
        txtBanco.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        txtBanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBancoActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setText("Banco");

        txtSalario.setEditable(false);
        txtSalario.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        txtSalario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSalarioActionPerformed(evt);
            }
        });

        btnLimpiarE.setBackground(new java.awt.Color(255, 255, 204));
        btnLimpiarE.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnLimpiarE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/limpiar.png"))); // NOI18N
        btnLimpiarE.setText("Limpiar");
        btnLimpiarE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(381, 381, 381))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(33, 33, 33)
                    .addComponent(btnTransaccion1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLimpiarE)
                    .addGap(18, 18, 18)
                    .addComponent(btnCancelarE)
                    .addContainerGap())
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                    .addGap(42, 42, 42)
                    .addComponent(jLabel7)
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtBanco, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(185, 185, 185)
                    .addComponent(btnCalcular)
                    .addContainerGap(175, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(57, 57, 57))
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPuesto)
                            .addComponent(txtFechaIngreso)
                            .addComponent(txtSalario, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 869, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPuesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(txtSalario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addComponent(btnCalcular, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTransaccion1)
                    .addComponent(btnCancelarE)
                    .addComponent(btnLimpiarE))
                .addGap(0, 26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTransaccion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransaccion1ActionPerformed
        // TODO add your handling code here:
        RealizarPago();        
    }//GEN-LAST:event_btnTransaccion1ActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        // TODO add your handling code here:
        if (txtSalario.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Realice la busqueda del empleado por Id", "Notificación" , JOptionPane.INFORMATION_MESSAGE);
            return;
        }   
        
        CalculosNomina();
    }//GEN-LAST:event_btnCalcularActionPerformed

    private void txtFechaIngresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaIngresoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaIngresoActionPerformed

    private void txtCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCuentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCuentaActionPerformed

    private void btnCancelarEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarEActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelarEActionPerformed

    private void txtPuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPuestoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPuestoActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        MostrarEmpleado();        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtBancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBancoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBancoActionPerformed

    private void txtSalarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSalarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSalarioActionPerformed

    private void btnLimpiarEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarEActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_btnLimpiarEActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jd_NominaEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jd_NominaEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jd_NominaEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jd_NominaEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            jd_NominaEmpleados dialog = new jd_NominaEmpleados(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }
    
    public void MostrarEmpleado(){
         try {
             
            String IdEmpleado;
            
            if (txtID.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Ingrese el Id del empleado", "Notificación" , JOptionPane.INFORMATION_MESSAGE);
            return;
            }
            
            IdEmpleado = txtID.getText().toString();
            
            List<Empleado> listaEmpleados = new ArrayList<>();            
            EmpleadoDAO empleadoDAO = new EmpleadoDAO(); //Llama al dao de usuario
            listaEmpleados = empleadoDAO.leerEmpleado();

            boolean existe = false;
            for (Empleado empleado : listaEmpleados) {
                 if (empleado.getIdEmpleado().equals(IdEmpleado)) {
                    existe = true;
                    
                    txtNombre.setText(empleado.getNombreEmpleado());
                    txtApellido.setText(empleado.getApellidoEmpleado());
                    txtBanco.setText(empleado.getBanco());
                    txtCuenta.setText(empleado.getNumeroCuenta());
                    txtPuesto.setText(empleado.getPuestoEmpleado());
                    txtSalario.setText(empleado.getSalario_Fijo().toString());
                    txtFechaIngreso.setText(empleado.getFechaIngreso().toString());
                    
                    break;
                }
            }

            if (!existe) {
                JOptionPane.showMessageDialog(this, "El Id del Empleado ingresado no existe", "Notificación" , JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ha ocurrido un error al buscar el usuario", "Error" , JOptionPane.ERROR_MESSAGE);
            return;
        }
     }
    
     public void limpiar(){
        
        txtID.setText("");
        txtNombre.setText("");
        txtApellido.setText("");
        txtPuesto.setText("");
        txtSalario.setText("");
        txtBanco.setText("");
        txtCuenta.setText("");
        txtFechaIngreso.setText("");
        
        //Limpieza de la tabla
        int filas = modelo.getRowCount();

         if (filas > 0) {
            for (int a = 0; filas > a; a++) {
                modelo.removeRow(0);
            }
         }
         
         SalarioNeto = 0.0;
        
    }  
     
    public void CalculosNomina(){     
        Double SalarioBruto, DeduccionInss, SalarioMenosInss, IR;
        DecimalFormat decimalFormat = new DecimalFormat("#.##");
        
        SalarioBruto = Double.parseDouble(txtSalario.getText());
        DeduccionInss = Double.parseDouble(decimalFormat.format((SalarioBruto * 0.07)));
        SalarioMenosInss = SalarioBruto - DeduccionInss;
        
        //Calculo del IR
        Double Salariox12, SobreExceso, MenosSobreExceso, ImpuestoBase; Double PorcentajeAplicable = 0.00;
                
        Salariox12 = SalarioMenosInss * 12; 
        double[] arreglo = CalcularSobreExceso(Salariox12);        
        SobreExceso = arreglo[0]; 
        MenosSobreExceso = Salariox12 - SobreExceso; 
        if (arreglo[1] > 0) {
            PorcentajeAplicable = MenosSobreExceso * (arreglo[1] / 100);
        }        
        ImpuestoBase = PorcentajeAplicable + arreglo[2];        
        IR = Double.parseDouble(decimalFormat.format((ImpuestoBase / 12)));        
        //Fin calculo de IR
        
        SalarioNeto = SalarioMenosInss - IR;
        
        modelo.addRow(new Object[]{SalarioBruto, DeduccionInss, SalarioMenosInss, IR, SalarioNeto});
    }
    
    public double[] CalcularSobreExceso(double Salariox12){
        double[] arreglo = new double[3];
        int valor = 0; int PorcentajeAplicable = 0; int ImpuestoBase = 0;
        
        if (Salariox12 > 0.01 && Salariox12 <= 100000) {
            valor  = 0;
            PorcentajeAplicable = 0;
            ImpuestoBase = 0;
        }else if (Salariox12 > 100000.01 && Salariox12 <= 200000) {
            valor  = 100000;
            PorcentajeAplicable = 15;
            ImpuestoBase = 0;
        }else if (Salariox12 > 200000.01 && Salariox12 <= 350000) {
            valor  = 200000;
            PorcentajeAplicable = 20;
            ImpuestoBase = 15000;
        }else if (Salariox12 > 350000.01 && Salariox12 <= 500000) {
            valor  = 350000;
            PorcentajeAplicable = 25;
            ImpuestoBase = 45000;
        }else if (Salariox12 > 500000.01) {
            valor  = 500000;
            PorcentajeAplicable = 30;
            ImpuestoBase = 82500;
        }
    
        arreglo[0] = valor;
        arreglo[1] = PorcentajeAplicable;
        arreglo[2] = ImpuestoBase;
        
        return arreglo;
    }
    
      
    public void RealizarPago(){
        try {
        String NombreBancoCliente, NumeroCuentaCliente, Evento, NombreBanco;
        String NumeroCuenta = "";
        Double Monto; double Credito = 0; double Debito = 0;
        
        if (SalarioNeto <= 0.0) {
           JOptionPane.showMessageDialog(this, "El Monto del pago debe de ser mayor a cero", "Error" , JOptionPane.ERROR_MESSAGE);
           return;
        }
        
         if (txtBanco.getText().equals("")) {
           JOptionPane.showMessageDialog(this, "Realice el cálculo de la nómina del cliente", "Error" , JOptionPane.ERROR_MESSAGE);
           return;
        }
        
        List<Cuentas> listaCuentas = new ArrayList<>();   
        CuentasDAO cuentasDAO = new CuentasDAO(); 
        listaCuentas = cuentasDAO.leerCuentas(); 
                                     
        NombreBancoCliente = txtBanco.getText().toString();
        
        for (Cuentas cuenta : listaCuentas) {               
            if (cuenta.getNombreBanco().equals(NombreBancoCliente)) {
                NumeroCuenta = cuenta.getCuenta().toString();
            }  
        }
                  
        double SaldoActual = Double.parseDouble(SumarSaldo(NumeroCuenta));

         if ((SaldoActual - SalarioNeto) < 0) {
            JOptionPane.showMessageDialog(this, "No se puede realizar la transacción debido a que no cuenta con suficiente efectivo", "Error" , JOptionPane.ERROR_MESSAGE);
            return;
         }            
        Debito = SalarioNeto;
                             
             
        if (JOptionPane.showConfirmDialog(this, "Desea arealizar el pago?", "WARNING", JOptionPane.YES_NO_OPTION) == JOptionPane.NO_OPTION) {
          return;
        }
        
        MovimientosCuentas movimientos = new MovimientosCuentas(NumeroCuenta, String.valueOf(Credito), String.valueOf(Debito));
        
        MovimientosCuentasDAO movimientosCuentasDAO = new MovimientosCuentasDAO();
        movimientosCuentasDAO.CrearMovimientoCuentas(movimientos);
        
        limpiar();
                      
        JOptionPane.showMessageDialog(this, "Pago relizado exitosamente", "Notificación" , JOptionPane.INFORMATION_MESSAGE);
                
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ha ocurrido un error al realizar la transacción de pago", "Error" , JOptionPane.ERROR_MESSAGE);
            return;
        }
    }
    
    public String SumarSaldo(String NumeroCuenta){
         
         try {
             
            List<MovimientosCuentas> listaMovimientos = new ArrayList<>();   
            MovimientosCuentasDAO movimientosCuentasDAO = new MovimientosCuentasDAO(); 
            listaMovimientos = movimientosCuentasDAO.leerMovimientosCuentas(); 
            
            double Creditos = 0.0; double Debitos = 0.0; double Sumatoria = 0.0;
            String Saldo;
            
            for (MovimientosCuentas movimientos : listaMovimientos) {               
                if (movimientos.getNumeroCuenta().equals(NumeroCuenta)) {
                    Creditos += Double.parseDouble(movimientos.getCreditos());
                    Debitos += Double.parseDouble(movimientos.getDebitos());
                }
            }
            
            Sumatoria = Creditos - Debitos;               
            Saldo = String.valueOf(Sumatoria);
                      
            return Saldo;
             
         } catch (Exception e) {
             JOptionPane.showMessageDialog(this, "Ha ocurrido un error al calcular el saldo", "Error" , JOptionPane.ERROR_MESSAGE);
            return "";
         }
     }
 
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnCancelarE;
    private javax.swing.JButton btnLimpiarE;
    private javax.swing.JButton btnTransaccion1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblNomina;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtBanco;
    private javax.swing.JTextField txtCuenta;
    private javax.swing.JTextField txtFechaIngreso;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPuesto;
    private javax.swing.JTextField txtSalario;
    // End of variables declaration//GEN-END:variables

  
}
